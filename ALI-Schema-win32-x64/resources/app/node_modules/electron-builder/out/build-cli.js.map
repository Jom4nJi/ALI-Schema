{
  "version": 3,
  "file": "build-cli.js",
  "sourceRoot": "",
  "sources": [
    "../src/build-cli.ts"
  ],
  "names": [],
  "mappings": ";;;AAEA,0BAAkC,AAAW,AAC7C,AAAC;AAAD,0BAAkC,AAAgB,AAClD,AAAC;AAAD,6BAA4B,AAAc,AAC1C,AAAC;AAAD,6BAAyB,AAAY,AACrC,AAAC;AAAD,MAAY,AAAI,eAAM,AAAM,AAE5B,AAAC;AAAD,MAAO,AAAc,yBAAW,AAAiB,AAAC;AAClD,sBAAqB,AAAY,AAEjC,AAAC;AAAD,AAAE,AAAC,IAAC,AAAO,QAAC,AAAG,IAAC,AAAE,MAAI,AAAI,QAAI,AAAO,QAAC,AAAG,IAAC,AAAkB,sBAAI,AAAI,AAAC,MAAC,AAAC;AACrE,iBAAQ,SAAC,AAAI,KAAC,AAAI,KAAC,AAAS,WAAE,AAAI,MAAE,AAAc,AAAC,AAAC,iBACjD,AAAI,KAAC,AAAE;AACN,AAAc;AACZ,AAAG,iBAAE,AAAE,AACR,AAAC;AAFa,WAEZ,AAAM,AAAE,AACb;AAAC,AAAC,OACD,AAAK,MAAC,AAAC;AACN,cAAI,AAAC,+BAAyB,AAAC,CAAE,AAAC,AACpC;AAAC,AAAC,AACN;AAAC;AAED,UAAK,AAAa,MAAC,aAAW,AAAE,cAAC,AAAI,AAAC,AAAC,MACpC,AAAK,MAAC,UAAiB,AAAC",
  "sourcesContent": [
    "#! /usr/bin/env node\n\nimport { build, CliOptions } from \"./builder\"\nimport { printErrorAndExit } from \"./util/promise\"\nimport { createYargs } from \"./cliOptions\"\nimport { readJson } from \"fs-extra-p\"\nimport * as path from \"path\"\n\nimport updateNotifier = require(\"update-notifier\")\nimport { warn } from \"./util/log\"\n\nif (process.env.CI == null && process.env.NO_UPDATE_NOTIFIER == null) {\n  readJson(path.join(__dirname, \"..\", \"package.json\"))\n    .then(it => {\n      updateNotifier({\n        pkg: it\n      }).notify()\n    })\n    .catch(e => {\n      warn(`Cannot check updates: ${e}`)\n    })\n}\n\nbuild(<CliOptions>(createYargs().argv))\n  .catch(printErrorAndExit)"
  ]
}
